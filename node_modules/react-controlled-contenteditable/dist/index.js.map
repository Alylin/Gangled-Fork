{"version":3,"sources":["../src/contentEditable/index.tsx","../src/contentEditable/useCaretPositioning.tsx","../src/contentEditable/useUndo.tsx","../src/contentEditable/useSaveRestoreRange.tsx","../src/contentEditable/common.tsx"],"sourcesContent":["import React, {\n\tforwardRef,\n\tHTMLAttributes,\n\tuseRef,\n\tmemo,\n\tuseLayoutEffect,\n} from 'react';\nimport {mergeRefs} from 'react-merge-refs';\nimport useCaretPositioning from './useCaretPositioning';\nimport fastDeepEqual from 'fast-deep-equal/react';\nexport type ContentEditableEvent = React.SyntheticEvent<HTMLElement, Event> & {\n\ttarget: {value: string};\n};\nexport type KeyDownEvent = React.KeyboardEvent<HTMLElement> & {\n\tisComposing: boolean;\n};\ntype Modify<T, R, R2> = Pick<\n\tT,\n\tExclude<keyof T, keyof R> & Exclude<keyof T, keyof R2>\n> &\n\tR &\n\tR2;\ntype DivProps = Modify<\n\tHTMLAttributes<HTMLElement>,\n\t{onChange: (event: ContentEditableEvent) => void},\n\t{onKeyDown?: (event: KeyDownEvent) => void}\n>;\nexport interface ContentEditableProps extends DivProps {\n\ttagName?: string;\n\thtml: string;\n}\n\nconst Editable = forwardRef(\n\t(\n\t\t{\n\t\t\ttagName = 'div',\n\t\t\tonChange,\n\t\t\thtml,\n\t\t\tonKeyDown,\n\t\t\tonInput,\n\t\t\tonCompositionStart,\n\t\t\tonCompositionEnd,\n\t\t\t...rest\n\t\t}: ContentEditableProps,\n\t\tref,\n\t) => {\n\t\tconst {\n\t\t\trefElement,\n\t\t\tcontent,\n\t\t\tsetContent,\n\t\t\thandleInput,\n\t\t\thandleKeyDown,\n\t\t\thandleInputIME,\n\t\t\thandleCompositionStart,\n\t\t\t...props\n\t\t} = useCaretPositioning();\n\n\t\tconst isComposing = useRef(false);\n\t\tconst handleOnChange = (e: React.SyntheticEvent<HTMLElement>) => {\n\t\t\tif (isComposing.current) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\thandleInput(e);\n\t\t\tconst htmlContent = (e.target as HTMLElement).innerHTML;\n\n\t\t\tconst evt = Object.assign({}, e, {\n\t\t\t\ttarget: {\n\t\t\t\t\tvalue: htmlContent,\n\t\t\t\t},\n\t\t\t});\n\t\t\tonChange?.(evt);\n\t\t\tonInput?.(e);\n\t\t};\n\t\tconst handleKeydown = (e: React.KeyboardEvent<HTMLElement>) => {\n\t\t\tconst evt = Object.assign({}, e, {\n\t\t\t\tisComposing: isComposing.current,\n\t\t\t\tpreventDefault: e.preventDefault,\n\t\t\t});\n\t\t\thandleKeyDown(evt);\n\n\t\t\tonKeyDown?.(evt);\n\t\t};\n\n\t\tconst _handleCompositionStart = (\n\t\t\te: React.CompositionEvent<HTMLElement>,\n\t\t) => {\n\t\t\tisComposing.current = true;\n\t\t\thandleCompositionStart(e);\n\t\t\tonCompositionStart?.(e);\n\t\t};\n\n\t\tconst handleCompositionEnd = (\n\t\t\te: React.CompositionEvent<HTMLElement>,\n\t\t) => {\n\t\t\thandleInputIME(e);\n\t\t\tisComposing.current = false;\n\t\t\tonCompositionEnd?.(e);\n\t\t};\n\n\t\tuseLayoutEffect(() => {\n\t\t\tif (typeof html !== 'string') return;\n\t\t\tsetContent(html);\n\t\t}, [html, setContent]);\n\n\t\treturn React.createElement(tagName, {\n\t\t\tonCompositionStart: _handleCompositionStart,\n\t\t\tonCompositionEnd: handleCompositionEnd,\n\t\t\tonKeyDown: handleKeydown,\n\t\t\tonInput: handleOnChange,\n\t\t\tdangerouslySetInnerHTML: {__html: content},\n\t\t\tcontentEditable: true,\n\t\t\tref: mergeRefs([refElement, ref]),\n\t\t\tdir: 'auto',\n\t\t\t...props,\n\t\t\t...rest,\n\t\t});\n\t},\n);\n\nconst isPropsEqual = (\n\tprevProp: ContentEditableProps,\n\tnextProp: ContentEditableProps,\n) => {\n\treturn fastDeepEqual(prevProp, nextProp);\n};\nconst ContentEditable = memo(Editable, isPropsEqual);\nexport default ContentEditable;\n","import React, {useRef, useState, useCallback, useLayoutEffect} from 'react';\nimport {KeyDownEvent} from '.';\nimport useUndo from './useUndo';\nimport {getRange} from './common';\nimport useSaveRestoreRange from './useSaveRestoreRange';\n\nconst formattingElsAndAnchorElement = [\n\t'EM',\n\t'B',\n\t'STRONG',\n\t'I',\n\t'U',\n\t'MARK',\n\t'SMALL',\n\t'DEL',\n\t'INS',\n\t'SUB',\n\t'TT',\n\t'BIG',\n\t'A',\n];\n\nconst getFirstTextNode = (element: Node) => {\n\tlet textNode = element;\n\n\twhile (textNode?.firstChild) {\n\t\ttextNode = textNode.firstChild;\n\t}\n\n\treturn textNode as Text | Node;\n};\nconst getAnyMainParentIncluded = (node: Node | HTMLElement, list: string[]) => {\n\tlet parent: Node | HTMLElement | null = node;\n\n\tif (!parent?.parentElement) return null;\n\n\tlet isParentAnyOfList = list.includes(parent.parentElement?.tagName || '');\n\n\twhile (isParentAnyOfList) {\n\t\tconst pare: HTMLElement | null = parent?.parentElement || null;\n\t\tif (\n\t\t\tlist.includes((pare as HTMLElement).tagName) &&\n\t\t\t!(pare as HTMLElement)?.hasAttribute('contenteditable')\n\t\t) {\n\t\t\tparent = pare;\n\t\t} else {\n\t\t\tisParentAnyOfList = false;\n\t\t}\n\t}\n\tif (list.includes((parent as Element)?.tagName || '') === false) {\n\t\treturn null;\n\t}\n\n\treturn parent;\n};\n\nconst getMainHTMLFormattingOrAnchorElement = (node: Node | HTMLElement) => {\n\treturn getAnyMainParentIncluded(node, formattingElsAndAnchorElement);\n};\n\nconst getNeighboringNode = (node: Node, endOffset: number) => {\n\tlet prev: Node | null = null;\n\tlet next: Node | null = null;\n\tlet current: Node | null = null;\n\n\tlet parent = node.nodeType === 1 ? node.childNodes[endOffset] : node;\n\tlet hasNoSibling = true;\n\tlet i = 0;\n\twhile (hasNoSibling) {\n\t\tif (next && prev) {\n\t\t\thasNoSibling = false;\n\t\t\tbreak;\n\t\t}\n\n\t\tif (next === null && parent?.nextSibling) {\n\t\t\tconst indexOfNext = Array.prototype.indexOf.call(\n\t\t\t\tparent?.parentElement?.childNodes,\n\t\t\t\tparent.nextSibling,\n\t\t\t);\n\t\t\tif (!current) {\n\t\t\t\tcurrent = parent;\n\t\t\t}\n\n\t\t\tnext = parent.parentElement?.childNodes[indexOfNext] || null;\n\t\t}\n\t\tif (prev === null && parent?.previousSibling) {\n\t\t\tconst indexOfPrev = Array.prototype.indexOf.call(\n\t\t\t\tparent?.parentElement?.childNodes,\n\t\t\t\tparent.previousSibling,\n\t\t\t);\n\t\t\tif (!current) {\n\t\t\t\tcurrent = parent;\n\t\t\t}\n\n\t\t\tprev = parent.parentElement?.childNodes[indexOfPrev] || null;\n\t\t}\n\n\t\tparent = parent?.parentElement as Node;\n\n\t\tif ((parent as Element)?.hasAttribute('contenteditable')) {\n\t\t\tbreak;\n\t\t}\n\t\tif (i > 1000) {\n\t\t\tbreak;\n\t\t}\n\t\ti++;\n\t}\n\treturn {prev, next, current};\n};\n\nconst useCaretPositioning = () => {\n\tconst refElement = useRef<HTMLDivElement>(null);\n\tconst [content, setContent] = useState<string>('');\n\tconst {\n\t\tsaveRange,\n\t\trestoreCaretPosition,\n\t\tgetMatchedContainers,\n\t\tcaretPosition,\n\t\tsetCaretPosition,\n\t} = useSaveRestoreRange(refElement.current as HTMLElement);\n\tconst isCaretAfterBR = useRef(false);\n\tconst undoState = useUndo(refElement.current as HTMLElement);\n\n\tconst triggerInput = () => {\n\t\tconst ev = new Event('input', {\n\t\t\tbubbles: true,\n\t\t\tcancelable: true,\n\t\t});\n\t\trefElement.current?.dispatchEvent(ev);\n\t};\n\n\tconst navigateThroughNestedElementsOnArrowKeys = useCallback(\n\t\t(e: KeyDownEvent) => {\n\t\t\tlet arrowDir =\n\t\t\t\te.key === 'ArrowRight' || e.key === 'ArrowLeft' ? e.key : null;\n\t\t\tif (!arrowDir) return;\n\t\t\tif (\n\t\t\t\trefElement.current &&\n\t\t\t\tgetComputedStyle(refElement.current as Element).direction ===\n\t\t\t\t\t'rtl'\n\t\t\t) {\n\t\t\t\tarrowDir = arrowDir === 'right' ? 'left' : 'right';\n\t\t\t}\n\t\t\tconst sel = document.getSelection();\n\t\t\tconst range = getRange();\n\n\t\t\tconst endContainer = range?.endContainer;\n\t\t\tconst endOffset = range?.endOffset;\n\t\t\tif (!range || !endContainer || typeof endOffset === 'undefined')\n\t\t\t\treturn;\n\n\t\t\tconst {prev, next, current} = getNeighboringNode(\n\t\t\t\tendContainer,\n\t\t\t\tendOffset,\n\t\t\t);\n\n\t\t\tif (!prev && !next) return;\n\t\t\tconst isAtEnd =\n\t\t\t\tendContainer?.textContent?.length === range?.endOffset;\n\n\t\t\tconst isAtStart =\n\t\t\t\tendOffset === 0 ||\n\t\t\t\tendOffset === 1 ||\n\t\t\t\tendContainer?.nodeType === 1;\n\n\t\t\tconst isCurrentFormattingEls =\n\t\t\t\t!!getMainHTMLFormattingOrAnchorElement(endContainer);\n\t\t\tconst isNextFormattingEls = !!getMainHTMLFormattingOrAnchorElement(\n\t\t\t\tnext as Node,\n\t\t\t);\n\t\t\tconst isPrevFormattingEls = !!getMainHTMLFormattingOrAnchorElement(\n\t\t\t\tprev as Node,\n\t\t\t);\n\n\t\t\tconst isNavigatingThroughFormattingEls =\n\t\t\t\t(isCurrentFormattingEls ||\n\t\t\t\t\tisNextFormattingEls ||\n\t\t\t\t\tisPrevFormattingEls) &&\n\t\t\t\t(isAtStart || isAtEnd);\n\n\t\t\tif (\n\t\t\t\tnext &&\n\t\t\t\tisAtEnd &&\n\t\t\t\tarrowDir === 'right' &&\n\t\t\t\t(next as Element)?.tagName === 'BR' &&\n\t\t\t\tisCaretAfterBR.current === false\n\t\t\t) {\n\t\t\t\te.preventDefault();\n\t\t\t\trange.setStartAfter(next);\n\t\t\t\trange.setEndAfter(next);\n\t\t\t\tsel?.removeAllRanges();\n\t\t\t\tsel?.addRange(range);\n\t\t\t\tisCaretAfterBR.current = true;\n\t\t\t} else if (\n\t\t\t\tarrowDir === 'right' &&\n\t\t\t\tcurrent?.previousSibling &&\n\t\t\t\tisCaretAfterBR.current === true\n\t\t\t) {\n\t\t\t\te.preventDefault();\n\t\t\t\trange.setStart(current, 0);\n\t\t\t\trange.setEnd(current, 0);\n\t\t\t\tsel?.removeAllRanges();\n\t\t\t\tsel?.addRange(range);\n\t\t\t}\n\n\t\t\tif (!isNavigatingThroughFormattingEls) return;\n\n\t\t\tif (\n\t\t\t\t(arrowDir === 'right' && !next) ||\n\t\t\t\t(arrowDir === 'left' && !prev)\n\t\t\t)\n\t\t\t\treturn;\n\n\t\t\tif (current && next && arrowDir === 'right' && isAtEnd) {\n\t\t\t\te.preventDefault();\n\n\t\t\t\tif (current.nodeType !== 1 || next.nodeType !== 1) {\n\t\t\t\t\trange.setStart(getFirstTextNode(next), 0);\n\t\t\t\t\trange.setEnd(getFirstTextNode(next), 0);\n\t\t\t\t} else {\n\t\t\t\t\trange.setStartAfter(current);\n\t\t\t\t\trange.setEndAfter(current);\n\t\t\t\t}\n\t\t\t} else if (\n\t\t\t\tcurrent &&\n\t\t\t\tarrowDir === 'right' &&\n\t\t\t\trange?.endContainer.nodeType === 1\n\t\t\t) {\n\t\t\t\te.preventDefault();\n\t\t\t\trange.setStart(getFirstTextNode(current), 0);\n\t\t\t\trange.setEnd(getFirstTextNode(current), 0);\n\t\t\t}\n\n\t\t\tif (current && prev && arrowDir === 'left' && isAtStart) {\n\t\t\t\te.preventDefault();\n\t\t\t\tconst prevLength =\n\t\t\t\t\tprev.nodeType === 1\n\t\t\t\t\t\t? (prev as Element).childNodes?.length\n\t\t\t\t\t\t: (prev as Text).length;\n\t\t\t\tconst prevContainer = prev.childNodes[prevLength - 1];\n\n\t\t\t\tif (range.endContainer.nodeType !== 1 && endOffset === 1) {\n\t\t\t\t\trange.setStart(endContainer, 0);\n\t\t\t\t\trange.setEnd(endContainer, 0);\n\t\t\t\t} else {\n\t\t\t\t\tif (\n\t\t\t\t\t\t(current.nodeType !== 1 && prev.nodeType === 1) ||\n\t\t\t\t\t\t(current?.nodeType === 1 &&\n\t\t\t\t\t\t\tprev.nodeType === 1 &&\n\t\t\t\t\t\t\trange.endOffset !== 0)\n\t\t\t\t\t) {\n\t\t\t\t\t\trange.setStart(\n\t\t\t\t\t\t\tprevContainer,\n\t\t\t\t\t\t\t(prevContainer as Text).length,\n\t\t\t\t\t\t);\n\t\t\t\t\t\trange.setEnd(\n\t\t\t\t\t\t\tprevContainer,\n\t\t\t\t\t\t\t(prevContainer as Text).length,\n\t\t\t\t\t\t);\n\t\t\t\t\t} else if (\n\t\t\t\t\t\tcurrent?.nodeType === 1 &&\n\t\t\t\t\t\trange?.endContainer.nodeType !== 1 &&\n\t\t\t\t\t\tprev.nodeType === 1\n\t\t\t\t\t) {\n\t\t\t\t\t\trange.setStartBefore(current);\n\t\t\t\t\t\trange.setEndBefore(current);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t(prev as Element).tagName === 'BR' &&\n\t\t\t\t\t\t\tisCaretAfterBR.current === false\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\trange.setStartAfter(prev);\n\t\t\t\t\t\t\trange.setEndAfter(prev);\n\t\t\t\t\t\t\tisCaretAfterBR.current = true;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\trange.setStart(prev, (prev as Text).length);\n\t\t\t\t\t\t\trange.setEnd(prev, (prev as Text).length);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tsel?.removeAllRanges();\n\t\t\tsel?.addRange(range);\n\t\t\tsetTimeout(() => (isCaretAfterBR.current = false), 0);\n\t\t},\n\t\t[],\n\t);\n\n\tconst jumpOutsideFormattingElementWhenAtEndContainer = useCallback(() => {\n\t\tconst range = getRange();\n\t\tconst selection = document.getSelection();\n\t\tconst endContainer = range?.endContainer;\n\n\t\tif (\n\t\t\tendContainer?.textContent !== range?.startContainer.textContent ||\n\t\t\trange?.startOffset !== range?.endOffset\n\t\t)\n\t\t\treturn;\n\n\t\tif (!refElement.current || !endContainer || !range) return;\n\n\t\tconst formattingElement = endContainer.parentElement;\n\t\tif (\n\t\t\tformattingElement &&\n\t\t\tgetMainHTMLFormattingOrAnchorElement(endContainer)?.nodeType ===\n\t\t\t\t1 &&\n\t\t\tendContainer.textContent?.length === range.endOffset\n\t\t) {\n\t\t\tif (endContainer.nextSibling && endContainer.previousSibling) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\trange.setStartAfter(formattingElement);\n\t\t\trange.setEndAfter(formattingElement);\n\n\t\t\trange.collapse();\n\t\t\tselection?.removeAllRanges();\n\t\t\tselection?.addRange(range);\n\t\t}\n\t}, []);\n\n\tconst moveCaretOutsideFormattingElementWhenAtOffsetZeroAndAfterBR =\n\t\tuseCallback(() => {\n\t\t\tconst range = getRange();\n\t\t\tconst selection = document.getSelection();\n\t\t\tconst endContainer = range?.endContainer;\n\n\t\t\tif (\n\t\t\t\tendContainer?.textContent !==\n\t\t\t\t\trange?.startContainer.textContent ||\n\t\t\t\trange?.startOffset !== range?.endOffset\n\t\t\t)\n\t\t\t\treturn;\n\t\t\tif (!refElement.current || !endContainer || !range) return;\n\t\t\tconst mainElementFormattingEl =\n\t\t\t\tgetMainHTMLFormattingOrAnchorElement(endContainer);\n\t\t\tif (\n\t\t\t\t(mainElementFormattingEl?.previousSibling as Element)\n\t\t\t\t\t?.tagName === 'BR' &&\n\t\t\t\tmainElementFormattingEl?.nodeType === 1 &&\n\t\t\t\trange.startOffset === 0\n\t\t\t) {\n\t\t\t\trange.setStartBefore(mainElementFormattingEl);\n\t\t\t\trange.setEndBefore(mainElementFormattingEl);\n\t\t\t\tselection?.removeAllRanges();\n\t\t\t\tselection?.addRange(range);\n\t\t\t}\n\t\t}, []);\n\n\tconst inputCharManuallyWhenCaretAtStartOrEndTextOrBtwnFormattingElements =\n\t\tuseCallback(\n\t\t\t(e: React.CompositionEvent | InputEvent) => {\n\t\t\t\tconst compositionEvent = e as React.CompositionEvent;\n\t\t\t\tconst keyDownEvent = e as InputEvent;\n\t\t\t\tconst sel = getSelection();\n\t\t\t\tconst range = getRange();\n\n\t\t\t\tif (\n\t\t\t\t\trange?.endContainer?.textContent !==\n\t\t\t\t\t\trange?.startContainer.textContent ||\n\t\t\t\t\trange?.startOffset !== range?.endOffset\n\t\t\t\t)\n\t\t\t\t\treturn;\n\t\t\t\tlet newValue = keyDownEvent?.data || compositionEvent?.data;\n\t\t\t\t//checking if caret at the end of container or at the beginning\n\t\t\t\tif (\n\t\t\t\t\trange &&\n\t\t\t\t\t(range?.endContainer.textContent?.length ===\n\t\t\t\t\t\trange.endOffset ||\n\t\t\t\t\t\trange?.endContainer.nodeType === 1 ||\n\t\t\t\t\t\trange.endOffset === 0)\n\t\t\t\t) {\n\t\t\t\t\tif (!newValue && !/\\s/g.test(newValue)) return;\n\t\t\t\t\tnewValue = /\\s/g.test(newValue)\n\t\t\t\t\t\t? 'white_space_&nbsp;'\n\t\t\t\t\t\t: newValue;\n\n\t\t\t\t\te.preventDefault();\n\n\t\t\t\t\tif (range.endContainer.nodeType !== 1) {\n\t\t\t\t\t\t//it is a text node and caret at the beginning of container\n\t\t\t\t\t\tif (range.endOffset === 0) {\n\t\t\t\t\t\t\tconst content = range.endContainer.textContent;\n\t\t\t\t\t\t\tconst newContent = newValue + content;\n\n\t\t\t\t\t\t\trange.endContainer.nodeValue = newContent;\n\n\t\t\t\t\t\t\trange.setStart(range.endContainer, 1);\n\t\t\t\t\t\t\trange.setEnd(range.endContainer, 1);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t//it is a text node and caret at the end of container\n\t\t\t\t\t\t\tconst content = range.endContainer.textContent;\n\t\t\t\t\t\t\tconst newContent = content + newValue;\n\n\t\t\t\t\t\t\trange.endContainer.nodeValue = newContent;\n\t\t\t\t\t\t\tconst endOffset =\n\t\t\t\t\t\t\t\tnewValue === 'white_space_&nbsp;'\n\t\t\t\t\t\t\t\t\t? (content?.length || 0) + 1\n\t\t\t\t\t\t\t\t\t: newContent.length;\n\t\t\t\t\t\t\trange.setStart(range.endContainer, endOffset);\n\t\t\t\t\t\t\trange.setEnd(range.endContainer, endOffset);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t//case it is a node element\n\t\t\t\t\t\tconst newTextNode = document.createTextNode(newValue);\n\n\t\t\t\t\t\tconst isAfterBR =\n\t\t\t\t\t\t\t(\n\t\t\t\t\t\t\t\trange?.endContainer.childNodes[\n\t\t\t\t\t\t\t\t\trange?.endOffset - 1\n\t\t\t\t\t\t\t\t] as Element\n\t\t\t\t\t\t\t)?.tagName === 'BR';\n\n\t\t\t\t\t\tconst prev = range?.endContainer.childNodes[\n\t\t\t\t\t\t\trange?.endOffset - 1\n\t\t\t\t\t\t] as Element;\n\t\t\t\t\t\tconst next = range?.endContainer.childNodes[\n\t\t\t\t\t\t\trange?.endOffset + 1\n\t\t\t\t\t\t] as Element;\n\n\t\t\t\t\t\tlet current = range?.endContainer.childNodes[\n\t\t\t\t\t\t\trange?.endOffset\n\t\t\t\t\t\t] as Node;\n\n\t\t\t\t\t\tconst isBetweenFormattingElements =\n\t\t\t\t\t\t\tformattingElsAndAnchorElement.includes(\n\t\t\t\t\t\t\t\tprev?.tagName,\n\t\t\t\t\t\t\t) &&\n\t\t\t\t\t\t\tformattingElsAndAnchorElement.includes(\n\t\t\t\t\t\t\t\tnext?.tagName,\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t!current &&\n\t\t\t\t\t\t\t(range?.endContainer as HTMLElement).hasAttribute(\n\t\t\t\t\t\t\t\t'contenteditable',\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\trange.insertNode(newTextNode);\n\t\t\t\t\t\t\trange.setStart(range.endContainer, 1);\n\t\t\t\t\t\t\trange.setEnd(range.endContainer, 1);\n\t\t\t\t\t\t} else if (\n\t\t\t\t\t\t\t(isAfterBR && next) ||\n\t\t\t\t\t\t\tisBetweenFormattingElements\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t//case caret between formatting element or after BR element that has next sibling\n\t\t\t\t\t\t\trange.insertNode(newTextNode);\n\t\t\t\t\t\t\trange.setStart(newTextNode, 1);\n\t\t\t\t\t\t\trange.setEnd(newTextNode, 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t//case caret before BR element and no next sibling\n\t\t\t\t\t\telse if (\n\t\t\t\t\t\t\t!next &&\n\t\t\t\t\t\t\t(current as Element)?.tagName === 'BR'\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tconst parent = current.parentElement;\n\t\t\t\t\t\t\tparent?.removeChild(current);\n\t\t\t\t\t\t\tparent?.append(newTextNode);\n\t\t\t\t\t\t\trange.setStart(newTextNode, 1);\n\t\t\t\t\t\t\trange.setEnd(newTextNode, 1);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (range.endContainer.nodeType === 1) {\n\t\t\t\t\t\t\t\trange.insertNode(newTextNode);\n\t\t\t\t\t\t\t\trange.setStart(newTextNode, 1);\n\t\t\t\t\t\t\t\trange.setEnd(newTextNode, 1);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\trange.endContainer.nodeValue =\n\t\t\t\t\t\t\t\t\trange.endContainer.nodeValue + newValue;\n\t\t\t\t\t\t\t\trange.setStart(\n\t\t\t\t\t\t\t\t\trange.endContainer,\n\t\t\t\t\t\t\t\t\t(range.endContainer as Text).length,\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\trange.setEnd(\n\t\t\t\t\t\t\t\t\trange.endContainer,\n\t\t\t\t\t\t\t\t\t(range.endContainer as Text).length,\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tsel?.removeAllRanges();\n\t\t\t\t\tsel?.addRange(range);\n\t\t\t\t\tsaveRange();\n\t\t\t\t\t// translate whitespace\n\t\t\t\t\tif (refElement.current?.innerHTML) {\n\t\t\t\t\t\trefElement.current.innerHTML =\n\t\t\t\t\t\t\trefElement.current?.innerHTML.replaceAll(\n\t\t\t\t\t\t\t\t'white_space_&amp;nbsp;',\n\t\t\t\t\t\t\t\t'&nbsp;',\n\t\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\tsetTimeout(triggerInput, 0);\n\t\t\t\t}\n\t\t\t},\n\t\t\t[saveRange],\n\t\t);\n\n\tconst correctInputDataContainerIME = useCallback(\n\t\t(e: React.CompositionEvent) => {\n\t\t\tconst sel = document.getSelection();\n\t\t\tconst range = getRange();\n\t\t\tconst currentEndContainer = range?.endContainer;\n\t\t\tconst currentEndOffset = range?.endOffset;\n\t\t\tconst originalEndContainer = getMatchedContainers()?.end || null;\n\t\t\tconst originalEndOffset = caretPosition?.endOffset;\n\n\t\t\t//if whole text is being selected do nothing\n\t\t\tif (originalEndOffset !== caretPosition?.startOffset) return;\n\n\t\t\t//check if current end container is not equal original container\n\t\t\tif (\n\t\t\t\trange &&\n\t\t\t\toriginalEndContainer &&\n\t\t\t\tcurrentEndContainer &&\n\t\t\t\tcurrentEndOffset &&\n\t\t\t\ttypeof originalEndOffset === 'number' &&\n\t\t\t\t!currentEndContainer?.isEqualNode(originalEndContainer)\n\t\t\t) {\n\t\t\t\tconst dataLength = e.data.length;\n\n\t\t\t\tconst newInputDataStartOffset = Math.abs(\n\t\t\t\t\tdataLength - currentEndOffset,\n\t\t\t\t);\n\n\t\t\t\tconst newInputDataEndOffset = currentEndOffset;\n\n\t\t\t\trange.selectNodeContents(currentEndContainer);\n\t\t\t\t//select input data\n\t\t\t\trange.setStart(currentEndContainer, newInputDataStartOffset);\n\t\t\t\trange.setEnd(currentEndContainer, newInputDataEndOffset);\n\n\t\t\t\tconst newInputData = range.extractContents().textContent;\n\t\t\t\tconst newInputDataNode = document.createTextNode(\n\t\t\t\t\tnewInputData || '',\n\t\t\t\t);\n\t\t\t\t//now we need to move the new input data to the original container\n\t\t\t\trange.setStart(originalEndContainer, originalEndOffset);\n\t\t\t\trange.setEnd(originalEndContainer, originalEndOffset);\n\n\t\t\t\tif (originalEndContainer.nodeType === 1) {\n\t\t\t\t\trange.insertNode(newInputDataNode);\n\t\t\t\t\t//move caret to the end of the newly input data\n\t\t\t\t\trange.setStart(newInputDataNode, dataLength);\n\t\t\t\t\trange.setEnd(newInputDataNode, dataLength);\n\t\t\t\t} else {\n\t\t\t\t\t//if caret at the end of container\n\t\t\t\t\tif (\n\t\t\t\t\t\toriginalEndOffset ===\n\t\t\t\t\t\t(originalEndContainer as Text).length\n\t\t\t\t\t) {\n\t\t\t\t\t\toriginalEndContainer.nodeValue =\n\t\t\t\t\t\t\t(originalEndContainer.nodeValue || '') +\n\t\t\t\t\t\t\tnewInputData;\n\t\t\t\t\t\t//move caret to the end of the newly entered data\n\t\t\t\t\t\tconst containerLength = (originalEndContainer as Text)\n\t\t\t\t\t\t\t.length;\n\t\t\t\t\t\trange.setStart(originalEndContainer, containerLength);\n\t\t\t\t\t\trange.setEnd(originalEndContainer, containerLength);\n\t\t\t\t\t} else {\n\t\t\t\t\t\toriginalEndContainer.nodeValue =\n\t\t\t\t\t\t\tnewInputData +\n\t\t\t\t\t\t\t(originalEndContainer.nodeValue || '');\n\t\t\t\t\t\trange.setStart(originalEndContainer, dataLength);\n\t\t\t\t\t\trange.setEnd(originalEndContainer, dataLength);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tsel?.removeAllRanges();\n\t\t\t\tsel?.addRange(range);\n\t\t\t}\n\t\t},\n\t\t[caretPosition, getMatchedContainers],\n\t);\n\n\tconst handleInputIME = (e: React.CompositionEvent) => {\n\t\tconst content = (e.target as HTMLElement).innerHTML;\n\t\tcorrectInputDataContainerIME(e);\n\t\tsaveRange();\n\t\tsetContent(content);\n\t};\n\tconst handleInput = (e: React.SyntheticEvent<HTMLElement>) => {\n\t\tconst content = (e.target as HTMLElement).innerHTML;\n\t\tsaveRange();\n\t\tsetContent(content);\n\t};\n\n\tuseLayoutEffect(() => {\n\t\trestoreCaretPosition();\n\t}, [restoreCaretPosition]);\n\n\tconst handleKeyDown = useCallback(\n\t\t(e: KeyDownEvent) => {\n\t\t\tnavigateThroughNestedElementsOnArrowKeys(e);\n\n\t\t\tif (e.shiftKey && e.key === 'Enter') {\n\t\t\t\tsetTimeout(\n\t\t\t\t\tmoveCaretOutsideFormattingElementWhenAtOffsetZeroAndAfterBR,\n\t\t\t\t\t0,\n\t\t\t\t);\n\t\t\t}\n\t\t},\n\t\t[\n\t\t\tnavigateThroughNestedElementsOnArrowKeys,\n\t\t\tmoveCaretOutsideFormattingElementWhenAtOffsetZeroAndAfterBR,\n\t\t],\n\t);\n\n\tconst handleCompositionStart = useCallback(\n\t\t(_e: React.CompositionEvent) => {\n\t\t\tsaveRange();\n\t\t},\n\t\t[saveRange],\n\t);\n\n\tuseLayoutEffect(() => {\n\t\tconst el = refElement.current;\n\n\t\tconst handleInput = (e: InputEvent) => {\n\t\t\tif (!e.isComposing) {\n\t\t\t\tinputCharManuallyWhenCaretAtStartOrEndTextOrBtwnFormattingElements(\n\t\t\t\t\te,\n\t\t\t\t);\n\t\t\t}\n\t\t};\n\n\t\tconst handleOnClick = (_e: MouseEvent) => {\n\t\t\tmoveCaretOutsideFormattingElementWhenAtOffsetZeroAndAfterBR();\n\t\t\tjumpOutsideFormattingElementWhenAtEndContainer();\n\t\t};\n\n\t\tel?.addEventListener('click', handleOnClick);\n\t\tel?.addEventListener('beforeinput', handleInput);\n\n\t\treturn () => {\n\t\t\tel?.removeEventListener('click', handleOnClick);\n\t\t\tel?.removeEventListener('beforeinput', handleInput);\n\t\t};\n\t}, [\n\t\tjumpOutsideFormattingElementWhenAtEndContainer,\n\t\tmoveCaretOutsideFormattingElementWhenAtOffsetZeroAndAfterBR,\n\t\tinputCharManuallyWhenCaretAtStartOrEndTextOrBtwnFormattingElements,\n\t]);\n\n\tuseLayoutEffect(() => {\n\t\tif (\n\t\t\ttypeof undoState?.html !== 'undefined' &&\n\t\t\tundoState?.caretPosition\n\t\t) {\n\t\t\tsetContent(undoState?.html);\n\t\t\tsetCaretPosition(undoState?.caretPosition);\n\t\t}\n\t}, [undoState, setCaretPosition]);\n\treturn {\n\t\trefElement,\n\t\tcontent,\n\t\tsetContent,\n\t\thandleKeyDown,\n\t\thandleInput,\n\t\thandleInputIME,\n\t\thandleCompositionStart,\n\t};\n};\nexport default useCaretPositioning;\n","import {useRef, useCallback, useEffect, useState} from 'react';\r\nimport fastDeepEqual from 'fast-deep-equal/react';\r\nimport useSaveRestoreRange, {CaretPosition} from './useSaveRestoreRange';\r\n\r\ninterface State {\r\n\tcaretPosition: CaretPosition;\r\n\thtml: string;\r\n\taction: string;\r\n}\r\nconst keys = ['Backspace', 'Paste', 'Enter', 'Delete'];\r\n\r\nconst useUndo = (el: HTMLElement) => {\r\n\tconst [allChanges, setAllChanges] = useState<State[]>();\r\n\tconst [undoState, setUndoState] = useState<State>();\r\n\tconst [prevCaretPosition, setPrevCaretPost] = useState<CaretPosition>();\r\n\r\n\tconst hasCaretPosChangedByUser = useRef(false);\r\n\tconst {getCaretPosition} = useSaveRestoreRange(el);\r\n\tconst detectCaretChange = useCallback(() => {\r\n\t\tconst caretPosition = getCaretPosition();\r\n\t\tif (\r\n\t\t\tcaretPosition?.endContainerPos &&\r\n\t\t\tprevCaretPosition &&\r\n\t\t\tfastDeepEqual(\r\n\t\t\t\tcaretPosition?.endContainerPos,\r\n\t\t\t\tprevCaretPosition?.endContainerPos,\r\n\t\t\t)\r\n\t\t) {\r\n\t\t\tconst diff = Math.abs(\r\n\t\t\t\tcaretPosition.endOffset - prevCaretPosition.endOffset,\r\n\t\t\t);\r\n\t\t\tif (diff > 2) {\r\n\t\t\t\thasCaretPosChangedByUser.current = true;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\thasCaretPosChangedByUser.current = false;\r\n\t\t\treturn;\r\n\t\t}\r\n\t\thasCaretPosChangedByUser.current = true;\r\n\t}, [prevCaretPosition, getCaretPosition]);\r\n\r\n\tconst saveChanges = useCallback(\r\n\t\t(action: string) => {\r\n\t\t\tconst caretPos = getCaretPosition();\r\n\t\t\tif (!el || !caretPos) return;\r\n\t\t\tsetAllChanges((prev) => {\r\n\t\t\t\tlet prevChanges = [...(prev ? prev : [])];\r\n\t\t\t\tconst lastChange = prev ? prev[prev?.length - 1] : null;\r\n\t\t\t\tif (\r\n\t\t\t\t\tlastChange?.action === action ||\r\n\t\t\t\t\tlastChange?.html === el.innerHTML\r\n\t\t\t\t) {\r\n\t\t\t\t\treturn prevChanges;\r\n\t\t\t\t}\r\n\t\t\t\treturn [\r\n\t\t\t\t\t...prevChanges,\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tcaretPosition: caretPos,\r\n\t\t\t\t\t\thtml: el.innerHTML,\r\n\t\t\t\t\t\taction: action,\r\n\t\t\t\t\t},\r\n\t\t\t\t];\r\n\t\t\t});\r\n\t\t},\r\n\t\t[el, getCaretPosition],\r\n\t);\r\n\r\n\tconst undo = useCallback(\r\n\t\t(e: KeyboardEvent) => {\r\n\t\t\tif (e.key === 'Undo' || (e.ctrlKey && e.code === 'KeyZ')) {\r\n\t\t\t\tlet changes = [...(allChanges ? allChanges : [])];\r\n\t\t\t\tlet lastChange = changes.pop();\r\n\t\t\t\tsetUndoState(lastChange);\r\n\t\t\t\tsetAllChanges(changes);\r\n\t\t\t}\r\n\t\t},\r\n\t\t[allChanges],\r\n\t);\r\n\r\n\tconst handleKeyDown = useCallback(\r\n\t\t(e: KeyboardEvent) => {\r\n\t\t\tconst isLetter =\r\n\t\t\t\te.code.substring(0, 3).toLocaleLowerCase() === 'key';\r\n\t\t\tconst isNumber =\r\n\t\t\t\te.code.substring(0, 6).toLocaleLowerCase() === 'numpad';\r\n\t\t\tconst isDigit =\r\n\t\t\t\te.code.substring(0, 5).toLocaleLowerCase() === 'digit';\r\n\t\t\tconst isChar = isDigit || isNumber || isLetter;\r\n\t\t\tif (\r\n\t\t\t\tkeys.includes(e.key) ||\r\n\t\t\t\t(e.ctrlKey && e.code === 'KeyV') ||\r\n\t\t\t\t(e.shiftKey && e.code === 'Enter') ||\r\n\t\t\t\tisLetter\r\n\t\t\t) {\r\n\t\t\t\tlet action =\r\n\t\t\t\t\te.ctrlKey && e.code === 'KeyV'\r\n\t\t\t\t\t\t? 'Paste'\r\n\t\t\t\t\t\t: isChar\r\n\t\t\t\t\t\t? 'isChar'\r\n\t\t\t\t\t\t: e.key;\r\n\t\t\t\tif (action === 'isChar') {\r\n\t\t\t\t\tsetPrevCaretPost(getCaretPosition());\r\n\t\t\t\t}\r\n\t\t\t\tif (action === 'isChar' && hasCaretPosChangedByUser.current) {\r\n\t\t\t\t\taction = 'caretPosChangedByUser';\r\n\t\t\t\t\thasCaretPosChangedByUser.current = false;\r\n\t\t\t\t}\r\n\t\t\t\tsaveChanges(action);\r\n\t\t\t}\r\n\r\n\t\t\tundo(e);\r\n\t\t},\r\n\t\t[\r\n\t\t\tsaveChanges,\r\n\t\t\tundo,\r\n\t\t\tsetPrevCaretPost,\r\n\t\t\tgetCaretPosition,\r\n\t\t\thasCaretPosChangedByUser,\r\n\t\t],\r\n\t);\r\n\r\n\tconst handleOnClick = useCallback(\r\n\t\t(e: MouseEvent) => {\r\n\t\t\te.stopImmediatePropagation();\r\n\t\t\tdetectCaretChange();\r\n\t\t},\r\n\t\t[detectCaretChange],\r\n\t);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst editable = el;\r\n\t\teditable?.addEventListener('click', handleOnClick);\r\n\t\teditable?.addEventListener('keydown', handleKeyDown);\r\n\r\n\t\treturn () => {\r\n\t\t\teditable?.removeEventListener('keydown', handleKeyDown);\r\n\t\t\teditable?.removeEventListener('click', handleOnClick);\r\n\t\t};\r\n\t}, [el, handleKeyDown, handleOnClick]);\r\n\r\n\treturn undoState;\r\n};\r\nexport default useUndo;\r\n","import {useRef, useCallback, useLayoutEffect, useState} from 'react';\r\nimport {getNodeDepthAndIndexes, getRange, getMatchedContainer} from './common';\r\n\r\nexport interface CaretPosition {\r\n\tendOffset: number;\r\n\tstartOffset: number;\r\n\tstartContainerPos: {\r\n\t\tindexes: number[];\r\n\t\tdepth: number;\r\n\t};\r\n\tendContainerPos: {\r\n\t\tindexes: number[];\r\n\t\tdepth: number;\r\n\t};\r\n}\r\nconst useSaveRestoreRange = (el: HTMLElement) => {\r\n\tconst [caretPosition, setCaretPosition] = useState<CaretPosition>();\r\n\tconst isPaste = useRef(false);\r\n\r\n\tconst getCaretPosition = useCallback(() => {\r\n\t\tconst range = getRange();\r\n\t\tif (range) {\r\n\t\t\tconst startContainerPos = getNodeDepthAndIndexes(\r\n\t\t\t\trange.startContainer,\r\n\t\t\t\t'contenteditable',\r\n\t\t\t);\r\n\t\t\tconst endContainerPos = getNodeDepthAndIndexes(\r\n\t\t\t\trange.endContainer,\r\n\t\t\t\t'contenteditable',\r\n\t\t\t);\r\n\t\t\tif (!startContainerPos || !endContainerPos) return;\r\n\r\n\t\t\treturn {\r\n\t\t\t\tendOffset: range.endOffset,\r\n\t\t\t\tstartOffset: range.startOffset,\r\n\t\t\t\tstartContainerPos,\r\n\t\t\t\tendContainerPos,\r\n\t\t\t};\r\n\t\t}\r\n\t}, []);\r\n\tconst saveRange = useCallback(() => {\r\n\t\tsetCaretPosition(getCaretPosition());\r\n\t}, [getCaretPosition]);\r\n\r\n\tconst getMatchedContainers = useCallback(() => {\r\n\t\tif (!caretPosition || !el) return {start: null, end: null};\r\n\r\n\t\tconst end = getMatchedContainer(el, caretPosition.endContainerPos);\r\n\t\tconst start = getMatchedContainer(el, caretPosition.startContainerPos);\r\n\r\n\t\treturn {start, end};\r\n\t}, [caretPosition, el]);\r\n\r\n\tconst restoreCaretPosition = useCallback(() => {\r\n\t\tconst sel = document.getSelection();\r\n\r\n\t\tconst range = new Range();\r\n\r\n\t\tif (caretPosition) {\r\n\t\t\tconst matchedEndContainer = getMatchedContainers()?.end;\r\n\t\t\tconst matchedStartContainer = getMatchedContainers()?.start;\r\n\r\n\t\t\tif (matchedEndContainer && matchedStartContainer) {\r\n\t\t\t\trange.setStart(\r\n\t\t\t\t\tmatchedStartContainer,\r\n\t\t\t\t\tcaretPosition.startOffset,\r\n\t\t\t\t);\r\n\t\t\t\trange.setEnd(matchedEndContainer, caretPosition.endOffset);\r\n\t\t\t\tif (isPaste.current) {\r\n\t\t\t\t\trange.setEnd(\r\n\t\t\t\t\t\tmatchedStartContainer,\r\n\t\t\t\t\t\tcaretPosition.startOffset,\r\n\t\t\t\t\t);\r\n\t\t\t\t\tisPaste.current = false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tsel?.removeAllRanges();\r\n\t\t\tsel?.addRange(range);\r\n\t\t}\r\n\t}, [caretPosition, getMatchedContainers]);\r\n\r\n\tuseLayoutEffect(() => {\r\n\t\tconst element = el;\r\n\t\tconst handleOnPaste = () => {\r\n\t\t\tisPaste.current = true;\r\n\t\t};\r\n\t\telement?.addEventListener('paste', handleOnPaste);\r\n\r\n\t\treturn () => element?.removeEventListener('paste', handleOnPaste);\r\n\t}, [el]);\r\n\r\n\treturn {\r\n\t\tcaretPosition,\r\n\t\tgetMatchedContainers,\r\n\t\tsaveRange,\r\n\t\trestoreCaretPosition,\r\n\t\tgetCaretPosition,\r\n\t\tsetCaretPosition,\r\n\t};\r\n};\r\nexport default useSaveRestoreRange;\r\n","export const getNodeDepthAndIndexes = (\r\n\tnode: Node | HTMLElement,\r\n\thighestParentAttribute: string,\r\n) => {\r\n\tif (!node && !highestParentAttribute) return null;\r\n\tlet searchNode: Node | null = node;\r\n\tlet attribute =\r\n\t\tnode.nodeType === 1\r\n\t\t\t? (searchNode as HTMLElement)?.getAttribute(\r\n\t\t\t\t\thighestParentAttribute,\r\n\t\t\t  ) === 'true'\r\n\t\t\t: false;\r\n\tlet depth: number = 0;\r\n\tlet indexes: number[] = [];\r\n\r\n\twhile (!attribute) {\r\n\t\tif (searchNode?.parentElement?.childNodes) {\r\n\t\t\t//fix\r\n\t\t\tindexes.push(\r\n\t\t\t\tArray.prototype.indexOf.call(\r\n\t\t\t\t\tsearchNode?.parentElement?.childNodes,\r\n\t\t\t\t\tsearchNode,\r\n\t\t\t\t),\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\tsearchNode = searchNode?.parentElement || null;\r\n\r\n\t\tif (!searchNode) {\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tif (\r\n\t\t\t(searchNode as HTMLElement)?.getAttribute(\r\n\t\t\t\thighestParentAttribute,\r\n\t\t\t) === 'true'\r\n\t\t) {\r\n\t\t\tattribute = true;\r\n\t\t}\r\n\r\n\t\tif (depth > 1000) {\r\n\t\t\tdepth = -1; //not found even after 1000 loop\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tdepth++;\r\n\t}\r\n\treturn {depth, indexes: indexes.reverse()};\r\n};\r\n\r\nconst getNestedNodeByIndexesAndDepth = (\r\n\telement: Element,\r\n\tindexes: number[],\r\n\tdepth: number,\r\n) => {\r\n\tif (indexes.length > 0 && depth < 0 && !Element) return null;\r\n\r\n\tlet node: Node = element;\r\n\tlet currentDepth = 0;\r\n\r\n\twhile (currentDepth !== depth) {\r\n\t\tnode = node?.childNodes[indexes[currentDepth]];\r\n\t\tcurrentDepth++;\r\n\r\n\t\tif (currentDepth > 10000) {\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\treturn node;\r\n};\r\n\r\nexport const getMatchedContainer = (\r\n\tcontentEditable: HTMLElement,\r\n\tstartContainerPos: {\r\n\t\tindexes: number[];\r\n\t\tdepth: number;\r\n\t},\r\n) => {\r\n\tconst {depth, indexes} = startContainerPos;\r\n\r\n\treturn getNestedNodeByIndexesAndDepth(contentEditable, indexes, depth);\r\n};\r\n\r\nexport const getRange = () => {\r\n\tconst sel = document.getSelection();\r\n\tif (typeof sel?.rangeCount === 'undefined') return;\r\n\tconst range = sel.rangeCount > 0 ? sel?.getRangeAt(0) : null;\r\n\treturn range;\r\n};\r\n"],"mappings":"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","names":["import_react","import_react","import_react","fastDeepEqual","content","handleInput","import_react","React","fastDeepEqual"]}